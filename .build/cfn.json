{
  "Parameters": {
    "Bucket": {
      "Type": "String"
    },
    "InvokeModelLambdaName": {
      "Type": "String"
    },
    "InvokeModelSourceKey": {
      "Type": "String"
    },
    "ReviewApiName": {
      "Type": "String"
    },
    "AccountID": {
      "Type": "String"
    },
    "Region": {
      "Type": "String"
    },
    "SourceBucket": {
      "Type": "String",
      "Default": "game-review-generator"
    }
  },
  "Resources": {
    "BatchServiceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "batch.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole"
        ]
      }
    },
    "IamInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "EcsInstanceRole"
          }
        ]
      }
    },
    "EcsInstanceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "EcsInstanceRole",
        "AssumeRolePolicyDocument": {
          "Version": "2008-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role",
          "arn:aws:iam::aws:policy/AmazonS3FullAccess",
          "arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess"
        ]
      }
    },
    "BatchProcessingJobDefinition": {
      "Type": "AWS::Batch::JobDefinition",
      "Properties": {
        "Type": "container",
        "JobDefinitionName": "BatchJobDefinition",
        "ContainerProperties": {
          "Image": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "AWS::AccountId"
                },
                ".dkr.ecr.",
                {
                  "Ref": "AWS::Region"
                },
                ".amazonaws.com/game-review-generator-batch:latest"
              ]
            ]
          },
          "ResourceRequirements": [
            {
              "Type": "GPU",
              "Value": "1"
            },
            {
              "Type": "VCPU",
              "Value": "2"
            },
            {
              "Type": "MEMORY",
              "Value": "16384"
            }
          ],
          "Command": [
            "conda",
            "run",
            "-n",
            "grg",
            "python3",
            "generate_review.py"
          ],
          "Environment": [
            {
              "Name": "S3_BUCKET",
              "Value": {
                "Ref": "Bucket"
              }
            }
          ]
        },
        "RetryStrategy": {
          "Attempts": 1
        }
      }
    },
    "BatchProcessingJobQueue": {
      "Type": "AWS::Batch::JobQueue",
      "Properties": {
        "JobQueueName": "BatchProcessingJobQueue",
        "Priority": 1,
        "ComputeEnvironmentOrder": [
          {
            "Order": 1,
            "ComputeEnvironment": {
              "Ref": "ComputeEnvironment"
            }
          }
        ]
      }
    },
    "ComputeEnvironment": {
      "Type": "AWS::Batch::ComputeEnvironment",
      "Properties": {
        "Type": "MANAGED",
        "ComputeResources": {
          "Type": "SPOT",
          "MinvCpus": 0,
          "DesiredvCpus": 0,
          "MaxvCpus": 4,
          "InstanceTypes": [
            "g3s.xlarge"
          ],
          "Subnets": [
            {
              "Ref": "Subnet"
            }
          ],
          "SecurityGroupIds": [
            {
              "Ref": "SecurityGroup"
            }
          ],
          "InstanceRole": {
            "Ref": "IamInstanceProfile"
          },
          "SpotIamFleetRole": {
            "Ref": "AmazonEC2SpotFleetTaggingRole"
          }
        },
        "ServiceRole": {
          "Ref": "BatchServiceRole"
        }
      }
    },
    "AmazonEC2SpotFleetTaggingRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": "spotfleet.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AmazonEC2SpotFleetTaggingRole"
        ]
      }
    },
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16"
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway"
    },
    "RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "VPCGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "SecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "EC2 Security Group for instances launched in the VPC by Batch",
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "Subnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/24",
        "VpcId": {
          "Ref": "VPC"
        },
        "MapPublicIpOnLaunch": "True"
      }
    },
    "Route": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "RouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "SubnetRouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "RouteTable"
        },
        "SubnetId": {
          "Ref": "Subnet"
        }
      }
    },
    "InvokeModel": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": {
          "Ref": "InvokeModelLambdaName"
        },
        "Handler": "app.lambda_handler",
        "Runtime": "python3.8",
        "Role": {
          "Fn::GetAtt": [
            "InvokeModelRole",
            "Arn"
          ]
        },
        "Code": {
          "S3Bucket": {
            "Ref": "Bucket"
          },
          "S3Key": {
            "Ref": "InvokeModelSourceKey"
          }
        },
        "MemorySize": 128,
        "Timeout": 30
      }
    },
    "InvokeModelRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": {
          "Fn::Sub": "lambda-role"
        },
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/AWSLambdaExecute",
          "arn:aws:iam::aws:policy/AmazonS3FullAccess",
          "arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess",
          "arn:aws:iam::aws:policy/AmazonKinesisFullAccess",
          "arn:aws:iam::aws:policy/AWSBatchFullAccess",
          "arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole"
        ],
        "Path": "/"
      }
    },
    "BatchProcessRepository": {
      "Type": "AWS::ECR::Repository",
      "Properties": {
        "RepositoryName": "game-review-generator-batch",
        "RepositoryPolicyText": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "AllowPushPull",
              "Effect": "Allow",
              "Principal": {
                "AWS": [
                  {
                    "Fn::GetAtt": [
                      "EcsInstanceRole",
                      "Arn"
                    ]
                  }
                ]
              },
              "Action": [
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
                "ecr:BatchCheckLayerAvailability",
                "ecr:PutImage",
                "ecr:InitiateLayerUpload",
                "ecr:UploadLayerPart",
                "ecr:CompleteLayerUpload"
              ]
            }
          ]
        }
      }
    },
    "ReviewApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": {
          "Ref": "ReviewApiName"
        },
        "Description": "API used to invoke game review generation model based on given prompt",
        "FailOnWarnings": true
      }
    },
    "LambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "InvokeModel",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:execute-api:",
              {
                "Ref": "Region"
              },
              ":",
              {
                "Ref": "AccountID"
              },
              ":",
              {
                "Ref": "ReviewApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "ReviewApiStage": {
      "DependsOn": [
        "ApiGatewayAccount"
      ],
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "DeploymentId": {
          "Ref": "ApiDeployment"
        },
        "MethodSettings": [
          {
            "DataTraceEnabled": true,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "ResourcePath": "/*"
          }
        ],
        "RestApiId": {
          "Ref": "ReviewApi"
        },
        "StageName": "LATEST"
      }
    },
    "ApiGatewayCloudWatchLogsRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "apigateway.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "ApiGatewayLogsPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams",
                    "logs:PutLogEvents",
                    "logs:GetLogEvents",
                    "logs:FilterLogEvents"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "ApiGatewayAccount": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiGatewayCloudWatchLogsRole",
            "Arn"
          ]
        }
      }
    },
    "ApiDeployment": {
      "Type": "AWS::ApiGateway::Deployment",
      "DependsOn": [
        "ReviewRequest"
      ],
      "Properties": {
        "RestApiId": {
          "Ref": "ReviewApi"
        },
        "StageName": "DummyStage"
      }
    },
    "ReviewResource": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": {
          "Ref": "ReviewApi"
        },
        "ParentId": {
          "Fn::GetAtt": [
            "ReviewApi",
            "RootResourceId"
          ]
        },
        "PathPart": "review"
      }
    },
    "ReviewRequest": {
      "DependsOn": "LambdaPermission",
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "Type": "AWS",
          "IntegrationHttpMethod": "POST",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "InvokeModel",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          },
          "IntegrationResponses": [
            {
              "StatusCode": 200
            }
          ],
          "RequestTemplates": {
            "application/json": {
              "Fn::Join": [
                "",
                [
                  "{",
                  "\"prompt\": \"$input.params('prompt')\", \"bucket\": \"",
                  {
                    "Ref": "Bucket"
                  },
                  "\"",
                  "}"
                ]
              ]
            }
          }
        },
        "RequestParameters": {
          "method.request.querystring.prompt": false
        },
        "ResourceId": {
          "Ref": "ReviewResource"
        },
        "RestApiId": {
          "Ref": "ReviewApi"
        },
        "MethodResponses": [
          {
            "StatusCode": 200
          }
        ]
      }
    }
  },
  "Outputs": {
    "ComputeEnvironmentArn": {
      "Value": {
        "Ref": "ComputeEnvironment"
      }
    },
    "BatchProcessingJobQueueArn": {
      "Value": {
        "Ref": "BatchProcessingJobQueue"
      }
    },
    "BatchProcessingJobDefinitionArn": {
      "Value": {
        "Ref": "BatchProcessingJobDefinition"
      }
    },
    "BucketName": {
      "Value": {
        "Ref": "Bucket"
      }
    }
  },
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": ""
}
